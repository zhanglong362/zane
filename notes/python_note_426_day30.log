python 4-26 笔记

回顾
1. 守护进程
    如果进程将子进程设置为守护进程，那么在主进程代码执行完毕后，守护进程就立即被回收；

2. 互斥锁
    用来将并发变成串行，牺牲了效率而保证了数据安全；

    互斥锁与join的区别：
    1）join是人为地指定顺序，而互斥锁是大家平等地争抢，一个人拿到锁，其余人都等待；
    2）join只能将一个进程的代码整体串行，而互斥锁可以将局部串行，局部仅仅代表对共享数据修改的那一部分代码；

    lock.acquire()
    ...
    lock.release()

    强调：
        1）一定要在操作完毕后释放锁；
        2）互斥锁lock.acquire()不能连续执行；

3. IPC: 进程间通信
    管道
    队列：管道+锁

4. 生产者消费者模型
    模型指的是一种解决问题的思路；
    该模型下具备两类角色：
        生产者：生产数据
        消费者：处理数据

    该模型的运作方式：
        生产者生产数据，放到一个共享的空间，然后消费者取走进行处理；

    该模式的实现方式一：
        生产者进程+队列+消费者进程      #  队列中存放的是一些消息

    该模式的应用场景：
        如果程序中有明显的两类任务，一类任务是负责生产数据，另一种处理处理数据，
        就可以考虑用该模型；
    该模式优点：
        1）实现了生产者与消费者的解耦合；
        2）平衡了生产力与消费力，即生产者可以不断生产，消费者可以不断消费；

新笔记
推荐IT书籍 --> 现代操作系统
1. 什么是线程
    线程指的是一条流水线的工作过程；

    进程根本就不是一个执行单位，进程其实是一个资源单位；
    一个进程内自带一个线程，线程才是执行单位；

2. 进程 vs 线程
    1）同一进程内的线程们共享该进程内资源，不同进程内的线程资源，肯定是隔离的；
    2）创建线程的开销比创建的进程要小得多；
    3）统一进程内的多个线程共享该进程内的资源；













