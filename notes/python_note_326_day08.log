python 3-26 笔记

回顾：
1. 什么是文件？
    文件是操作系统提供给应用程序操作硬盘的一个虚拟单位。
    用于将应用程序将数据永久保存。
2. 文件操作
    绝对路径：从根目录开始的完整路径
    相对路径：基于程序当前路径
    1）f = open(r'a.txt', 'r', encoding='utf-8')
        f.cloce()
    2) with open(r'a.txt','r',encoding='utf-8') as f1,\
            open(r'b.txt','r',encoding='utf-8') as f2:
            子代码块
    3）文件的打开模式
        a. t：text 文本模式：读写文件是以字符串单位，需要指定字符编码；
                           t模式的局限性是只能读写文本文件。
        b. b:bytes 字节模式：读写模式都是以bytes为单位，不需要指定字符编码；
                           b模式的好处是，能读写任意类型的文件。
            使用 b 模式读写文件：
                f = open('a.txt', 'wb')
                f.write('你好'.encoding='utf-8')
                f.close()
3. 注意：t或b都不能单独使用，必须与r,w,a模式组合使用
    1) r: 只读
        文件不存在，则报错；
        文件存在，光标在文件头；
    2）w: 只写
        文件不存在，则创建新文件；
        文件存在，则清空；
        光标在文件头；
    3）a: 追加
        文件不存在，则创建文件；
        文件存在，光标在文件末尾；
4. 强调：
    读写文件换行符用 ‘\n’;

5. 文件操作方法
    读：
        .read()                                 # 读出文件所有数据
        .readline()                             # 一次读一行
        .readlines()                            # 读出文件所有的行，存入列表中
    写：
        userinfo = ['deram', '123', '3000']
        .write()                                # 写入，使用 ‘\n’ 来写入多行
            for line in userinfo:
                f.write(line) 
        .writelines()                           # 可以写入列表
            f.writelines(userinfo)
6. 文件修改：
    方式一：
        将文件内容全部读入内存，在内存中完成修改后，再覆盖写回硬盘；
        缺点：在文件过大的情况下，会过多占用内存；
    方式二：
        1. 以读的方式打开原文件，以写的方式打开新文件；
        2. 读一行原文内容，如果该行内容是需要修改的内容，那么修改完再写入新文件；
        3. 删除原文件，将新文件重命名为原文件；

新笔记：
一、函数体系知识
    1 什么是函数？
    2 为什么要用函数？
    3 函数的分类：内置函数与自定义函数
    4 如何自定义函数
      语法
      定义有参数函数，及有参函数的应用场景
      定义无参数函数，及无参函数的应用场景
      定义空函数，及空函数的应用场景

    5 调用函数
        如何调用函数
        函数的返回值
        函数参数的应用：形参和实参，位置参数，关键字参数，默认参数，*args，**kwargs

    6 高阶函数（函数对象）
    7 函数嵌套
    8 作用域与名称空间
    9 装饰器
    10 迭代器与生成器及协程函数
    11 三元运算，列表解析、生成器表达式
    12 函数的递归调用
    13 内置函数
    14 面向过程编程与函数式编程
二、 函数基础
1. 为什么要有函数？什么是函数？
    1）组织结构不清晰，可读性差；
    2）代码冗余；
    3）管理维护难度极大，扩展性差；

    具备某一功能的工具就是程序中的函数；
    事先准备工具的过程，即函数的定义；
    拿来就用，即函数的调用；

    所以函数的使用必须遵循，先定义，再调用。
2. 函数定义：
    语法：
        def      函数名(参数1，参数2， 参数3,...):
            '''
                文档描述
            '''
            return 
        def: 关键字
        函数名：用来调用函数（函数名的命名，必须能够反映出函数的功能）
        文档描述：推荐写，来增强函数的可读性
        return: 函数的返回值

        函数名(): 小括号调用函数

        函数调用的过程：
            a. 先找到内存中函数名对应的值（函数体）；
            b. 通过小括号来引用这个函数体，同时会传入函数需要的参数；
            c. 执行函数体的代码；
    1）定义函数的三种类型
        a. 有参函数：
            参数是函数体代码用来接收外部传入值的；
        b. 无参函数：
            当函数体的代码逻辑，不需要函数的调用者传入值的情况下，就无参；
            定义时无参，意味着调用是也不需要传入参数；
        c. 空函数：
            函数体为 pass
            def func():
                pass
3. 函数调用
    函数名加括号，即调用函数；
    原则：先定义，后调用；没有定义函数直接调用，就相当于调用一个不存在变量名；
    定义阶段：只检测语法，不执行函数代码；
    调用阶段：执行函数代码；

4. 函数返回 return
    1） 返回的三种情况：
        a. 无return语句，或只写一个 return关键字：
            返回 None
        b. return 一个值：
            返回该值
        c. return 多个值：
            返回一个元组
    2) 函数体内可以有多个return语句，return语句执行之后，函数结束；





